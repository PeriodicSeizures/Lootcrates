plugins {
    id 'java'
}

group = project.plugin_group
archivesBaseName = project.plugin_name
version = project.plugin_version

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url 'https://repo.skriptlang.org/releases'
    }
    maven {
        url 'https://repo.destroystokyo.com/repository/maven-public/'
    }
    maven {
        name = 'codemc'
        url = 'https://repo.codemc.io/repository/maven-snapshots/'
    }
    maven {
        name = 'lumine'
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
    maven { url "https://jitpack.io" }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:${project.spigot_version}"
    //implementation 'com.github.PeriodicSeizures:CRUtils:main-SNAPSHOT'
    // Load from files during dev for no hour long delay for jit
    implementation files('C:\\Users\\Rico\\Documents\\MinecraftDev\\servers\\1.18.1 paper\\plugins\\CRUtils.jar')
    //implementation 'com.github.PeriodicSeizures:Gapi:main-SNAPSHOT'
    implementation files('C:\\Users\\Rico\\Documents\\MinecraftDev\\servers\\1.18.1 paper\\plugins\\Gapi.jar')
    implementation 'me.zombie_striker:QualityArmory:2.0.6-SNAPSHOT'
    implementation 'com.github.SkriptLang:Skript:2.6.1'
    implementation 'net.Indyuce:MMOItems:6.7.1-SNAPSHOT'
    implementation 'io.lumine:MythicLib-dist:1.3-SNAPSHOT'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks.withType(Jar) {
    destinationDirectory = file("C:\\Users\\Rico\\Documents\\MinecraftDev\\servers\\1.18.2 paper\\plugins\\")
}

jar {
    archiveFileName = project.plugin_name + ".jar"
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
    filesMatching('config.yml') {
        expand props
    }
}
