plugins {
    id 'java'
}

group = project.plugin_group
archivesBaseName = project.plugin_name
version = project.plugin_version

allprojects {
    repositories {
        mavenCentral()
        maven {
            name = 'spigotmc-repo'
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/groups/public/'
        }
        maven {
            url 'https://repo.skriptlang.org/releases'
        }
        maven {
            url 'https://repo.destroystokyo.com/repository/maven-public/'
        }
        maven {
            name = 'codemc'
            url = 'https://repo.codemc.io/repository/maven-snapshots/'
        }
        maven {
            name = 'lumine'
            url = 'https://mvn.lumine.io/repository/maven-public/'
        }
        // jitpack is a github repository grabber
        maven { url "https://jitpack.io" }
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:${project.spigot_version}"
    implementation 'com.github.PeriodicSeizures:CRUtils:main-SNAPSHOT'
    implementation 'com.github.PeriodicSeizures:Gapi:main-SNAPSHOT'
    implementation 'me.zombie_striker:QualityArmory:2.0.6-SNAPSHOT'
    implementation 'com.github.SkriptLang:Skript:2.6.1'
    implementation 'net.Indyuce:MMOItems:6.7.1-SNAPSHOT'
    implementation 'io.lumine:MythicLib-dist:1.3-SNAPSHOT'

    implementation files('C:\\Users\\Rico\\Documents\\MinecraftDev\\api\\EcoItems v3.28.0.jar')

    // this is broken for some fucking reason ATM
    //implementation 'com.github.Auxilor:EcoItems:master-SNAPSHOT'
    //implementation 'com.github.Auxilor:EcoItems:3.10.0'
    //compileOnly 'com.willfp:EcoItems:2.6.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

jar {
    onlyIf { !sourceSets.main.allSource.files.isEmpty() }
    archiveFileName = project.plugin_name + " v" + project.plugin_version + " EcoItem Support.jar"
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
    filesMatching('config.yml') {
        expand props
    }
}
